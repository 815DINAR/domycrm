// kp-generator.js - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π

// URL –≤–∞—à–µ–≥–æ Google Apps Script
const GOOGLE_SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbxwHwGVDHQTFDk3dgnYyYSfZ9WSv6YWGha9G2Jdt_3VOJaJQ9Xr_gCzEL_FMOeBo_y3rg/exec';

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.lastCalculationData = null;

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü
async function generateCommercialProposal() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
    if (!window.calculationResults || window.calculationResults.length === 0) {
        alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏');
        return;
    }
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    const clientName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ö–ü:', '–û–û–û "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"');
    if (!clientName) return;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const button = document.getElementById('generateKP');
    const originalText = button.innerHTML;
    button.innerHTML = '‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...';
    button.disabled = true;
    
    try {
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        const data = collectDataForKP(clientName);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ Google Apps Script
        const response = await fetch(GOOGLE_SCRIPT_URL, {
            method: 'POST',
            mode: 'cors',
            headers: {
                'Content-Type': 'text/plain',
            },
            body: JSON.stringify(data)
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();
        
        if (result.success) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            showKPResultModal(result);
        } else {
            alert('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü: ' + (result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        button.innerHTML = originalText;
        button.disabled = false;
    }
}

// –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ö–ü
function collectDataForKP(clientName) {
    const calculatorType = document.getElementById('calculatorType').value;
    const propertyType = document.getElementById('propertyType').value;
    const tariffSelect = document.getElementById('tariffSelect');
    const tariffName = tariffSelect.options[tariffSelect.selectedIndex]?.text || '';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–º–µ—â–µ–Ω–∏–π
    let roomsCount = 0;
    let currentUnits = 0;
    let additionalUnits = 0;
    
    if (calculatorType === 'new') {
        roomsCount = parseInt(document.getElementById('totalUnits').value) || 0;
        additionalUnits = roomsCount;
    } else {
        currentUnits = parseInt(document.getElementById('currentUnits').value) || 0;
        additionalUnits = parseInt(document.getElementById('globalUnits').value) || 0;
        roomsCount = currentUnits + additionalUnits;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—ã
    const dateFrom = document.getElementById('dateFrom').value;
    const dateTo = document.getElementById('dateTo').value;
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–∫–∏–¥–∫—É
    const discount = parseFloat(document.getElementById('globalDiscount').value) || 0;
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
    const totalCostElement = document.querySelector('#totalCost div[style*="font-size: 24px"]');
    let totalCost = 0;
    if (totalCostElement) {
        const costText = totalCostElement.textContent;
        totalCost = parseFloat(costText.replace(/[^\d,.-]/g, '').replace(',', '.')) || 0;
    }
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const products = window.calculationResults.map(result => ({
        productName: result.productName,
        cost: result.cost,
        originalCost: result.originalCost,
        discount: result.discount,
        units: result.additionalUnits,
        dateFrom: result.dateFrom,
        dateTo: result.dateTo
    }));
    
    return {
        client: clientName,
        propertyType: propertyType,
        roomsCount: roomsCount,
        currentUnits: currentUnits,
        additionalUnits: additionalUnits,
        products: products,
        totalCost: totalCost,
        dateFrom: dateFrom,
        dateTo: dateTo,
        calculatorType: calculatorType,
        tariffName: tariffName,
        discount: discount
    };
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
function showKPResultModal(result) {
    const modal = document.getElementById('kpModal');
    const modalContent = document.getElementById('kpModalContent');
    
    modalContent.innerHTML = `
        <div style="padding: 10px; background: #f0f9ff; border-radius: 8px;">
            <p style="margin: 0 0 10px 0; color: #666;">–§–∞–π–ª —Å–æ–∑–¥–∞–Ω:</p>
            <p style="margin: 0; font-weight: 600; color: #333;">${result.fileName || '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'}</p>
        </div>
        
        <a href="${result.slidesUrl}" target="_blank" 
           style="display: flex; align-items: center; gap: 10px; padding: 15px; background: #4285f4; color: white; text-decoration: none; border-radius: 8px; transition: all 0.3s;">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
               <rect x="2" y="4" width="20" height="16" rx="2"/>
               <path d="M8 9h8"/>
               <path d="M8 13h6"/>
           </svg>
           <span>–û—Ç–∫—Ä—ã—Ç—å –≤ Google Slides</span>
       </a>
       
       <a href="${result.pdfUrl}" target="_blank" 
          style="display: flex; align-items: center; gap: 10px; padding: 15px; background: #ea4335; color: white; text-decoration: none; border-radius: 8px; transition: all 0.3s;">
           <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
               <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
               <polyline points="14 2 14 8 20 8"/>
               <line x1="16" y1="13" x2="8" y2="13"/>
               <line x1="16" y1="17" x2="8" y2="17"/>
               <polyline points="10 9 9 9 8 9"/>
           </svg>
           <span>–°–∫–∞—á–∞—Ç—å PDF</span>
       </a>
       
       <div style="padding: 15px; background: #fff3cd; border-radius: 8px; border-left: 4px solid #ffc107;">
           <p style="margin: 0; color: #856404; font-size: 14px;">
               üí° –°–æ–≤–µ—Ç: –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –≤ Google Slides –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∫–ª–∏–µ–Ω—Ç—É.
           </p>
       </div>
   `;
   
   modal.style.display = 'block';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
   // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü
   const generateKPBtn = document.getElementById('generateKP');
   if (generateKPBtn) {
       generateKPBtn.addEventListener('click', generateCommercialProposal);
   }
   
   // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ö–ü
   const kpModal = document.getElementById('kpModal');
   if (kpModal) {
       const closeBtn = kpModal.querySelector('.close');
       if (closeBtn) {
           closeBtn.addEventListener('click', function() {
               kpModal.style.display = 'none';
           });
       }
       
       // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
       window.addEventListener('click', function(event) {
           if (event.target === kpModal) {
               kpModal.style.display = 'none';
           }
       });
   }
   
   // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é displayResults –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
   const originalDisplayResults = window.displayResults;
   if (originalDisplayResults) {
       window.displayResults = function(results, totalCost, dateFrom, dateTo) {
           // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
           window.lastCalculationData = {
               results: results,
               totalCost: totalCost,
               dateFrom: dateFrom,
               dateTo: dateTo
           };
           
           // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
           originalDisplayResults.apply(this, arguments);
           
           // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü
           const generateKPBtn = document.getElementById('generateKP');
           if (generateKPBtn) {
               generateKPBtn.style.display = 'inline-block';
           }
       };
   }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function formatDateForKP(dateStr) {
   if (!dateStr) return '';
   
   // –ï—Å–ª–∏ –¥–∞—Ç–∞ —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì
   if (dateStr.includes('.')) return dateStr;
   
   // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ YYYY-MM-DD –≤ –î–î.–ú–ú.–ì–ì–ì–ì
   const parts = dateStr.split('-');
   if (parts.length === 3) {
       return `${parts[2]}.${parts[1]}.${parts[0]}`;
   }
   
   return dateStr;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.generateCommercialProposal = generateCommercialProposal;
window.collectDataForKP = collectDataForKP;
window.showKPResultModal = showKPResultModal;